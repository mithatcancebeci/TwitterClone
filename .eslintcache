[{"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\index.js":"1","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\App.js":"2","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\reportWebVitals.js":"3","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\configureStore.js":"4","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\UserSingUpPage.js":"5","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\HomePage.js":"6","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\UserPage.js":"7","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\LoginPage.js":"8","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\authReducer.js":"9","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\Nav.js":"10","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\api\\apiCall.js":"11","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\ButtonWithProg.js":"12","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\InputComp.js":"13","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\WhoToFollow.js":"14","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\DefaultProfileImage.js":"15","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\authAction.js":"16","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\Shared\\ApiProgress.js":"17","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Tweet\\TweetSubmit.js":"18","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\Stars.js":"19","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\Constants.js":"20","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Tweet\\TweetFeed.js":"21","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\TwitterIcon.js":"22","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\MessageIcon.js":"23","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\HomeOutlinedIcon.js":"24","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\NotificationOutlinedIcon.js":"25","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ListOutlinedIcon.js":"26","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ExploreOutlinedIcon.js":"27","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\BookMarksOutlinedIcon.js":"28","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\MoreIcon.js":"29","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButton.js":"30","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\ProfilePopover.js":"31","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ProfileOutlinedIcon.js":"32","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\Setting.js":"33","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\Topic.js":"34","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\Moments.js":"35","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\TwitterAds.js":"36","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\Analytics.js":"37","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\HelpCenter.js":"38","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\DisplayIcon.js":"39","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\Keyboard.js":"40","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\CheckIcon.js":"41","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Tweet\\TweetView.js":"42","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\UserListItem.js":"43","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ImageShare.js":"44","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\UploadImage.js":"45","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\Gif.js":"46","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\LikeIcon.js":"47","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ShareIcon.js":"48","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ReplyIcon.js":"49","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ReTweet.js":"50","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\ProfileCard.js":"51","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\CloseIcon.js":"52","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\HeaderCard\\Header.js":"53","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\DefaultBackgroundImage\\DefaultBackgroundImage.js":"54","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\Tweets.js":"55","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Modal\\ReplyModal.js":"56","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Modal\\EditModal.js":"57","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Replies\\ReplyFeed.js":"58","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Replies\\ReplyView.js":"59","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Replies\\ReplySubmit.js":"60"},{"size":677,"mtime":1611667105220,"results":"61","hashOfConfig":"62"},{"size":1523,"mtime":1614104117656,"results":"63","hashOfConfig":"62"},{"size":362,"mtime":499162500000,"results":"64","hashOfConfig":"62"},{"size":1237,"mtime":1612477295288,"results":"65","hashOfConfig":"62"},{"size":2764,"mtime":1611926093578,"results":"66","hashOfConfig":"62"},{"size":453,"mtime":1613427339058,"results":"67","hashOfConfig":"62"},{"size":1196,"mtime":1613136358374,"results":"68","hashOfConfig":"62"},{"size":2167,"mtime":1611926041077,"results":"69","hashOfConfig":"62"},{"size":656,"mtime":1611102085308,"results":"70","hashOfConfig":"62"},{"size":5548,"mtime":1613928812644,"results":"71","hashOfConfig":"62"},{"size":1924,"mtime":1614103934546,"results":"72","hashOfConfig":"62"},{"size":410,"mtime":1612380809715,"results":"73","hashOfConfig":"62"},{"size":895,"mtime":1613768336431,"results":"74","hashOfConfig":"62"},{"size":1078,"mtime":1613930113423,"results":"75","hashOfConfig":"62"},{"size":473,"mtime":1612534666380,"results":"76","hashOfConfig":"62"},{"size":1027,"mtime":1612709130370,"results":"77","hashOfConfig":"62"},{"size":1417,"mtime":1611956278907,"results":"78","hashOfConfig":"62"},{"size":3885,"mtime":1613495225921,"results":"79","hashOfConfig":"62"},{"size":1829,"mtime":1611848542092,"results":"80","hashOfConfig":"62"},{"size":134,"mtime":1611101978703,"results":"81","hashOfConfig":"62"},{"size":1338,"mtime":1613070721368,"results":"82","hashOfConfig":"62"},{"size":1255,"mtime":1611614520591,"results":"83","hashOfConfig":"62"},{"size":1468,"mtime":1613497527194,"results":"84","hashOfConfig":"62"},{"size":2263,"mtime":1611612362110,"results":"85","hashOfConfig":"62"},{"size":2235,"mtime":1612012776564,"results":"86","hashOfConfig":"62"},{"size":1894,"mtime":1612273113934,"results":"87","hashOfConfig":"62"},{"size":2547,"mtime":1611612335031,"results":"88","hashOfConfig":"62"},{"size":1410,"mtime":1611612062091,"results":"89","hashOfConfig":"62"},{"size":2591,"mtime":1611705767849,"results":"90","hashOfConfig":"62"},{"size":2829,"mtime":1612465856379,"results":"91","hashOfConfig":"62"},{"size":2010,"mtime":1612373894416,"results":"92","hashOfConfig":"62"},{"size":2226,"mtime":1611613296158,"results":"93","hashOfConfig":"62"},{"size":4449,"mtime":1611685364906,"results":"94","hashOfConfig":"62"},{"size":1488,"mtime":1611685027391,"results":"95","hashOfConfig":"62"},{"size":1023,"mtime":1611685033778,"results":"96","hashOfConfig":"62"},{"size":1188,"mtime":1611682067153,"results":"97","hashOfConfig":"62"},{"size":911,"mtime":1611682064462,"results":"98","hashOfConfig":"62"},{"size":1504,"mtime":1611688124766,"results":"99","hashOfConfig":"62"},{"size":1292,"mtime":1611689211480,"results":"100","hashOfConfig":"62"},{"size":1480,"mtime":1611689203983,"results":"101","hashOfConfig":"62"},{"size":663,"mtime":1611782678001,"results":"102","hashOfConfig":"62"},{"size":3949,"mtime":1614104008926,"results":"103","hashOfConfig":"62"},{"size":1001,"mtime":1613930551546,"results":"104","hashOfConfig":"62"},{"size":1117,"mtime":1611951121033,"results":"105","hashOfConfig":"62"},{"size":914,"mtime":1613258935230,"results":"106","hashOfConfig":"62"},{"size":1177,"mtime":1611950987704,"results":"107","hashOfConfig":"62"},{"size":877,"mtime":1611937168172,"results":"108","hashOfConfig":"62"},{"size":1078,"mtime":1611937344093,"results":"109","hashOfConfig":"62"},{"size":1119,"mtime":1613130427008,"results":"110","hashOfConfig":"62"},{"size":1371,"mtime":1611937187927,"results":"111","hashOfConfig":"62"},{"size":3216,"mtime":1614104035798,"results":"112","hashOfConfig":"62"},{"size":985,"mtime":1612800968347,"results":"113","hashOfConfig":"62"},{"size":400,"mtime":1612795854142,"results":"114","hashOfConfig":"62"},{"size":617,"mtime":1612797170446,"results":"115","hashOfConfig":"62"},{"size":3603,"mtime":1613489436809,"results":"116","hashOfConfig":"62"},{"size":2548,"mtime":1613312521751,"results":"117","hashOfConfig":"62"},{"size":2239,"mtime":1613258822780,"results":"118","hashOfConfig":"62"},{"size":1042,"mtime":1613426680157,"results":"119","hashOfConfig":"62"},{"size":4116,"mtime":1613489300273,"results":"120","hashOfConfig":"62"},{"size":4173,"mtime":1613495111493,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"14c11j7",{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"124"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"124"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"124"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"124"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"124"},"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\index.js",[],["260","261"],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\App.js",["262","263","264"],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\reportWebVitals.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\configureStore.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\UserSingUpPage.js",["265"],"import React, { useState } from \"react\";\r\n\r\n\r\n\r\nimport { signup,  } from \"../api/apiCall\";\r\nimport ButtonWithProg from \"../components/ButtonWithProg\";\r\nimport InputComp from \"../components/InputComp\";\r\nimport { useApiProgress } from \"../Shared/ApiProgress\";\r\nconst UserSingUpPage = (props) => {\r\n  const [form, SetForm] = useState({\r\n    username: null,\r\n    password: null,\r\n    displayName: null,\r\n    passwordRepeat: null,\r\n  });\r\n  const [errors, SetErrors] = useState({});\r\n  const onChangeEvent = (event) => {\r\n    const { name, value } = event.target;\r\n    const errorsCopy = { ...errors };\r\n    errorsCopy[name] = undefined;\r\n    SetErrors(errorsCopy);\r\n    const formCopy = { ...form };\r\n    formCopy[name] = value;\r\n    SetForm((previousForm) => ({ ...previousForm, [name]: value }));\r\n  };\r\n  const pendingApiCall=useApiProgress('post','/api/1.0/addUser',true);\r\n  const onClickSignUp = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { username, password, displayName } = form;\r\n    const body = {\r\n      username,\r\n      displayName,\r\n      password,\r\n    };\r\n   \r\n\r\n    try {\r\n      const response = await signup(body);\r\n    } catch (e) {\r\n      console.log(e.response.data);\r\n      if (e.response.data.validationErrors)\r\n        SetErrors(e.response.data.validationErrors);\r\n    }\r\n  \r\n  };\r\n  const {\r\n    username: usernameError,\r\n    password: passwordError,\r\n    displayName: displayNameError,\r\n  } = errors;\r\n  let passwordRepeatError;\r\n  if (form.password !== form.passwordRepeat) {\r\n    passwordRepeatError = \"Password mismatch\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    {\" \"}\r\n    <form>\r\n      <h5 className=\"text-center\">\r\n        <strong>Sign Up</strong>\r\n      </h5>\r\n      <InputComp\r\n        name=\"username\"\r\n        label=\"Username\"\r\n                error={usernameError}\r\n        onChange={onChangeEvent}\r\n      ></InputComp>\r\n      <InputComp\r\n        name=\"displayName\"\r\n        label=\"Display Name\"\r\n        error={displayNameError}\r\n        onChange={onChangeEvent}\r\n      ></InputComp>\r\n      <InputComp\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        error={passwordError}\r\n        onChange= {onChangeEvent}\r\n        type=\"password\"\r\n      ></InputComp>\r\n      <InputComp\r\n        name=\"passwordRepeat\"\r\n        label=\"Password Repeat\"\r\n        error={passwordRepeatError}\r\n        onChange={onChangeEvent}\r\n        type=\"password\"\r\n      ></InputComp>\r\n\r\n      <div className=\"text-center\">\r\n        <ButtonWithProg\r\n          disabled={(pendingApiCall&& form === null)}\r\n          onClick={onClickSignUp}\r\n          pendingApiCall={pendingApiCall}\r\n          text=\"Sign Up\"\r\n        ></ButtonWithProg>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default UserSingUpPage;\r\n","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\HomePage.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\UserPage.js",["266","267","268"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getUser } from '../api/apiCall';\r\n\r\nimport DefaultProfileImage from '../components/DefaultProfileImage';\r\nimport Header from '../components/HeaderCard/Header';\r\nimport Stars from '../components/Nav/icons/Stars';\r\nimport ProfileCard from '../components/ProfileCard';\r\nimport TweetFeed from '../components/Tweet/TweetFeed';\r\nimport { useApiProgress } from '../Shared/ApiProgress';\r\n\r\nconst UserPage = (props) => {\r\n  const [user,setUser]=useState({})\r\n   const {username}=useParams();\r\n   console.log(\"username\" +username)\r\n   const pendingApiCall = useApiProgress('get', \"/api/1.0/user/\" + username, true);\r\n   useEffect(() => {\r\n    const loadUser = async () => {\r\n      try {\r\n        const response = await getUser(username);\r\n        setUser(response.data);\r\n      } catch (error) {\r\n      \r\n      }\r\n    };\r\n    loadUser();\r\n  }, [username]);\r\n\r\n    return (\r\n      <div>\r\n        <Header icon={<Stars/>}text={username}></Header>\r\n        <ProfileCard username={username} displayName={user.displayName}/>\r\n       \r\n        \r\n      </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UserPage;\r\n","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\LoginPage.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\authReducer.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\Nav.js",["269"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeOutlinedIcon from \"./icons/HomeOutlinedIcon\";\r\nimport TwitterIcon from \"./icons/TwitterIcon\";\r\nimport MessageIcon from \"./icons/MessageIcon\";\r\nimport ExploreOutlinedIcon from \"./icons/ExploreOutlinedIcon\";\r\nimport NotificationOutlinedIcon from \"./icons/NotificationOutlinedIcon\";\r\nimport BookMarksOutlinedIcon from \"./icons/BookMarksOutlinedIcon\";\r\nimport ListOutlinedIcon from \"./icons/ListOutlinedIcon\";\r\nimport ProfileOutlinedIcon from \"./icons/ProfileOutlinedIcon\";\r\nimport ButtonWithProg from \"../ButtonWithProg\";\r\nimport MoreButton from \"../MoreButton\";\r\nimport MoreIcon from \"./icons/MoreIcon\";\r\nimport Topic from \"../MoreButtonIcons/Topic\";\r\nimport Moments from \"../MoreButtonIcons/Moments\";\r\nimport TwitterAds from \"../MoreButtonIcons/TwitterAds\";\r\nimport Analytics from \"../MoreButtonIcons/Analytics\";\r\nimport Setting from \"./icons/Setting\";\r\nimport HelpCenter from \"../MoreButtonIcons/HelpCenter\";\r\nimport DisplayIcon from \"../MoreButtonIcons/DisplayIcon\";\r\nimport Keyboard from \"../MoreButtonIcons/Keyboard\";\r\nimport ProfilePopover from \"../ProfilePopover\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutSuccess } from \"../../redux/authAction\";\r\nimport './Nav.css'\r\nimport TweetSubmit from \"../Tweet/TweetSubmit\";\r\nimport ReplyModal from '../Modal/ReplyModal'\r\n\r\nconst Nav = () => {\r\n  const {username,displayName,image}=useSelector((store)=>{\r\n    return{\r\n   \r\n      username:store.username,\r\n      displayName:store.displayName,\r\n      image:store.image\r\n    }\r\n   \r\n\r\n  });   \r\n  const dispatch=useDispatch();\r\n    const onClickLogOut=()=>{\r\n      dispatch(logoutSuccess());\r\n    }\r\n  const[tweetMode,setTweetMode]=useState(false)\r\n  const [form, SetForm] = useState({\r\n    home: false,\r\n    explore: false,\r\n    notification: false,\r\n    message: false,\r\n    bookmarks: false,\r\n    list: false,\r\n    profile: false,\r\n    more: false,\r\n  });\r\n  let className = \"icon\";\r\n\r\n  let className1 = \"icon active\";\r\n\r\n  return (\r\n    <div className=\"fixed-left\">\r\n            <div className=\"navi\">    \r\n            <Link to=\"/\"  onClick={(previousForm) => {\r\n          SetForm({ ...previousForm, home: true });\r\n        }}>\r\n        {\" \"}\r\n        <TwitterIcon />\r\n      </Link>\r\n   \r\n  \r\n      <Link\r\n        to=\"/\"\r\n        onClick={(previousForm) => {\r\n          SetForm({ ...previousForm, home: true });\r\n        }}\r\n      >\r\n        <HomeOutlinedIcon\r\n          className={form.home ? className1 : className}\r\n          active={form.home}\r\n          text=\"Home\"\r\n        />\r\n      </Link>\r\n      <Link\r\n        to=\"/\"\r\n        onClick={(previousForm) => {\r\n          SetForm({ ...previousForm, explore: true });\r\n        }}\r\n      >\r\n        <ExploreOutlinedIcon\r\n          className={form.explore ? className1 : className}\r\n          active={form.explore}\r\n          text=\"Explore\"\r\n        />\r\n      </Link>\r\n      <Link\r\n        to=\"/\"\r\n        onClick={(previousForm) => {\r\n          SetForm({ ...previousForm, notification: true });\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <NotificationOutlinedIcon\r\n          className={form.notification ? className1 : className}\r\n          active={form.notification}\r\n          text=\"Notifications\"\r\n        />\r\n      </Link>\r\n      <Link\r\n        to=\"/messages\"\r\n        onClick={(previousForm) => {\r\n          SetForm({ ...previousForm, message: true });\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <MessageIcon\r\n          className={form.message ? className1 : className}\r\n          active={form.message}\r\n          text=\"Message\"\r\n        />\r\n      </Link>\r\n\r\n      <Link\r\n        to=\"/\"\r\n        onClick={(previousForm) => {\r\n          SetForm({ ...previousForm, bookmarks: true });\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <BookMarksOutlinedIcon\r\n          className={form.bookmarks ? className1 : className}\r\n          active={form.bookmarks}\r\n          text=\"Bookmarks\"\r\n        />\r\n      </Link>\r\n      <Link\r\n        to=\"/\"\r\n        onClick={(previousForm) => {\r\n          SetForm({ ...previousForm, list: true });\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <ListOutlinedIcon\r\n          className={form.list ? className1 : className}\r\n          active={form.list}\r\n          text=\"List\"\r\n        />\r\n      </Link>\r\n      <Link\r\n        to={`/user/${username}`}\r\n        onClick={(previousForm) => {\r\n          SetForm({ ...previousForm, profile: true });\r\n        }}\r\n      >\r\n        <ProfileOutlinedIcon\r\n          className={form.profile ? className1 : className}\r\n          active={form.profile}\r\n          text=\"Profile\"\r\n        />\r\n      </Link>\r\n            <MoreButton \r\n        control=\"8\"\r\n        icon={<MoreIcon text=\"More\" active={true} />}\r\n        icon1={<Topic />} \r\n        icon2={<Moments />}\r\n        icon3={<TwitterAds />}\r\n        icon4={<Analytics />}\r\n        icon5={\r\n          <Setting\r\n            text=\"Setting and privacy\"\r\n            className=\"moreicon\"\r\n            fill=\"#5b7083\"\r\n          />\r\n        }\r\n        icon6={<HelpCenter/>}\r\n        icon7={<DisplayIcon/>}\r\n        icon8={<Keyboard/>}\r\n      ></MoreButton>\r\n      <ButtonWithProg  onClick={()=>setTweetMode(true)} className=\"tweetButton\" text=\"Tweet\"/>\r\n      {tweetMode&& <ReplyModal visible={true}  contentProps={<TweetSubmit/>}></ReplyModal>}\r\n      <ProfilePopover className=\"profilePopover\" logOutClick={onClickLogOut}  username={username} displayName={displayName} image={image} />\r\n   </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\api\\apiCall.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\ButtonWithProg.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\InputComp.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\WhoToFollow.js",["270"],"import React, { useEffect, useState } from \"react\";\r\nimport { useApiProgress } from \"../Shared/ApiProgress\";\r\nimport { getUsers } from \"../api/apiCall\";\r\nimport UserListItem from \"./UserListItem\";\r\nconst WhoToFollow = () => {\r\n  const [page, SetPage] = useState({\r\n    content: [],\r\n    size: 3,\r\n    currentPage: 0,\r\n  });\r\n  const [loadFailure, SetLoadFailure] = useState();\r\n  const pendingApiCall = useApiProgress(\"get\", \"/api/1.0/getUsers?page\", true);\r\n  const { content: users } = page;\r\n  const loadUsers = (page) => {\r\n    SetLoadFailure(false);\r\n    getUsers(page)\r\n      .then((response) => {\r\n        SetPage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        SetLoadFailure(true);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      \r\n      <div>\r\n        {users.map((user) => (\r\n          <UserListItem key={user.username} user={user}></UserListItem>\r\n        ))}\r\n      </div>\r\n      {loadFailure && <span className=\"badge-danger\">Failed data</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WhoToFollow;\r\n",["271","272"],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\DefaultProfileImage.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\authAction.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\Shared\\ApiProgress.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Tweet\\TweetSubmit.js",["273"],"import React, { useEffect, useState } from \"react\";\r\nimport {  postReply, postTweet, postTweetAttachment } from \"../../api/apiCall\";\r\nimport \"./Tweet.css\";\r\nimport DefaultProfileImage from \"../DefaultProfileImage\";\r\nimport ButtonWithProg from \"../ButtonWithProg\";\r\nimport ImageShare from \"../Nav/icons/ImageShare\";\r\nimport InputComp from \"../InputComp\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UploadImage from \"../UploadImage\";\r\nimport { useApiProgress } from \"../../Shared/ApiProgress\";\r\nimport ProfileOutlinedIcon from \"../Nav/icons/ProfileOutlinedIcon\";\r\nimport ListOutlinedIcon from \"../Nav/icons/ListOutlinedIcon\";\r\n\r\nconst TweetSubmit = (props) => {\r\n  const [tweetMessage, setTweet] = useState(\"\");\r\n  const { image } = useSelector((store) => ({\r\n    image: store.image,\r\n  }));\r\n \r\n\r\n \r\n  const [focused, setFocused] = useState(false);\r\n  const [errors, SetErrors] = useState({});\r\n  const [newImage, SetNewImage] = useState();\r\n\r\n  const [attachmentId, setAttachmentId] = useState();\r\n \r\n  useEffect(() => {\r\n    if (!focused) {\r\n      setTweet(\"\");\r\n      SetErrors({});\r\n      SetNewImage();\r\n      setAttachmentId();\r\n    \r\n    }\r\n  }, [focused]);\r\n  useEffect(() => {\r\n    SetErrors({});\r\n  }, [tweetMessage]);\r\n  const onClickTweet = async () => {\r\n    const body = {\r\n      content: tweetMessage,\r\n      attachmentId: attachmentId,\r\n    };\r\n    try {\r\n      await postTweet(body);\r\n      setFocused(false);\r\n    } catch (e) {\r\n      if (e.response.data.validationErrors) {\r\n        SetErrors(e.response.data.validationErrors);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n    const uploadFile = async (file) => {\r\n    const attachment = new FormData();\r\n    attachment.append(\"file\", file);\r\n    const response = await postTweetAttachment(attachment);\r\n    setAttachmentId(response.data.id);\r\n  };\r\n\r\n  const onChangeFile = (event) => {\r\n    if (event.target.files.length < 1) {\r\n      return;\r\n    }\r\n    const file = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.onload= () => {\r\n      SetNewImage(fileReader.result);\r\n      uploadFile(file);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  };\r\n  const pendingUploadFile = useApiProgress(\r\n    \"post\",\r\n    \"/api/1.0/tweet-attachments\",\r\n    true\r\n  );\r\n  return (\r\n    <div className=\"tweetSubmit\">\r\n      <form>\r\n        <div className=\"tweetSubmitArea\">\r\n          <DefaultProfileImage\r\n            width=\"48\"\r\n            height=\"48\"\r\n            className=\"rounded-circle\"\r\n            image={image}\r\n          />\r\n\r\n          <textarea\r\n            onChange={(e) =>setTweet(e.target.value)}\r\n            value={tweetMessage}\r\n            onFocus={() => setFocused(true)}\r\n            placeholder={\"What's Happening?\"}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"invalid-feedback\">{errors.content}</div>\r\n        <div className=\"share\">\r\n          <div className=\"share1\">\r\n            {!newImage  && (\r\n              <InputComp\r\n                icon={<ImageShare />}\r\n                active\r\n                id=\"upload-photo\"\r\n                type=\"file\"\r\n                \r\n                onChange={ onChangeFile}\r\n              ></InputComp>\r\n            )}\r\n            \r\n            {newImage && (\r\n              <UploadImage\r\n                image={newImage}\r\n                uploading={pendingUploadFile}\r\n                icon1={<ProfileOutlinedIcon />}\r\n                icon={<ListOutlinedIcon />}\r\n              ></UploadImage>\r\n            )}\r\n         \r\n          </div>\r\n    <ButtonWithProg\r\n            onClick={onClickTweet}\r\n            type=\"submit\"\r\n            text=\"Tweet\"\r\n            className=\"ttButton\"\r\n            disabled={tweetMessage.length===0 && !newImage}\r\n          ></ButtonWithProg>{\" \"}\r\n            \r\n          \r\n          \r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetSubmit;\r\n\r\n","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\Stars.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\Constants.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Tweet\\TweetFeed.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\TwitterIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\MessageIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\HomeOutlinedIcon.js",["274"],"import React, { useState } from 'react';\r\nimport './Icon.css'\r\nconst HomeOutlinedIcon = (props) => {\r\n   const {text,active,className}=props\r\n\r\n\r\n    return (\r\n<div className={className}  >\r\n{active?<svg width=\"26\" height=\"26\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M22.58 7.34998L12.475 1.89698C12.178 1.73698 11.821 1.73698 11.525 1.89698L1.42502 7.34998C0.939018 7.61398 0.758018 8.21998 1.02002 8.70598C1.20002 9.04098 1.54502 9.23098 1.90002 9.23098C2.06002 9.23098 2.22402 9.19298 2.37502 9.11098L3.10902 8.71498L4.69902 19.965C4.91502 21.179 6.00902 22.027 7.35902 22.027H16.641C17.991 22.027 19.085 21.179 19.303 19.939L20.891 8.71398L21.628 9.11198C22.113 9.37498 22.72 9.19398 22.982 8.70798C23.245 8.22198 23.062 7.61498 22.578 7.35298L22.58 7.34998ZM12 15.435C10.205 15.435 8.75002 13.98 8.75002 12.185C8.75002 10.39 10.205 8.93498 12 8.93498C13.795 8.93498 15.25 10.39 15.25 12.185C15.25 13.98 13.795 15.435 12 15.435Z\" fill=\"#1da1f2\"/>\r\n</svg>:<svg width=\"26\" height=\"26\" viewBox=\"0 0 24 24\" fill=\"none\"  xmlns=\"http://www.w3.org/2000/svg\" >\r\n<path d=\"M22.46 7.57002L12.357 2.11502C12.134 1.99502 11.867 1.99502 11.644 2.11502L1.54299 7.57002C1.17899 7.76702 1.04299 8.22202 1.23999 8.58702C1.37499 8.83702 1.63399 8.98002 1.89999 8.98002C2.01999 8.98002 2.14299 8.95002 2.25599 8.89002L3.07099 8.45002L4.69999 19.963C4.91399 21.178 6.00799 22.025 7.35799 22.025H16.64C17.992 22.025 19.085 21.177 19.303 19.938L20.929 8.44802L21.747 8.89002C22.111 9.08302 22.567 8.95002 22.764 8.58602C22.96 8.22302 22.824 7.76802 22.46 7.57002ZM17.822 19.703C17.715 20.309 17.119 20.525 16.642 20.525H7.35999C6.87999 20.525 6.28499 20.309 6.18199 19.727L4.47999 7.69002L12 3.62802L19.522 7.68802L17.822 19.703Z\" fill=\"black\"/>\r\n<path d=\"M8.21997 12.1841C8.21997 14.2681 9.91497 15.9641 12 15.9641C14.085 15.9641 15.78 14.2681 15.78 12.1841C15.78 10.1001 14.085 8.40405 12 8.40405C9.91497 8.40405 8.21997 10.1001 8.21997 12.1841ZM14.28 12.1841C14.28 13.4421 13.258 14.4641 12 14.4641C10.742 14.4641 9.71997 13.4421 9.71997 12.1841C9.71997 10.9261 10.742 9.90405 12 9.90405C13.258 9.90405 14.28 10.9261 14.28 12.1841Z\" fill=\"black\"/>\r\n</svg>\r\n}    \r\n<h2>{text}</h2>  \r\n</div>\r\n\r\n    );\r\n};\r\n\r\nexport default HomeOutlinedIcon;\r\n","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\NotificationOutlinedIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ListOutlinedIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ExploreOutlinedIcon.js",["275"],"import React, { useState } from 'react';\r\n\r\nconst ExploreOutlinedIcon = (props) => {\r\n    const {text,active,className}=props\r\n    \r\n    \r\n        \r\n    return (\r\n        <div className={className}>\r\n        {active?<svg width=\"26\" height=\"26\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M20.585 9.46798C21.245 9.46798 21.785 8.92998 21.785 8.26798C21.785 7.60598 21.245 7.06798 20.585 7.06798H17.365L17.675 3.52098C17.702 3.20298 17.605 2.89098 17.398 2.64598C17.192 2.40098 16.903 2.24998 16.576 2.22098C15.926 2.18598 15.341 2.65298 15.283 3.31398L14.957 7.06798H9.9L10.208 3.52298C10.268 2.86498 9.778 2.28098 9.111 2.22098C8.446 2.17098 7.876 2.65098 7.818 3.31298L7.493 7.06698H4.163C3.5 7.06698 2.963 7.60498 2.963 8.26698C2.963 8.92898 3.501 9.46698 4.163 9.46698H7.285L6.845 14.531H3.416C2.754 14.531 2.216 15.071 2.216 15.731C2.216 16.391 2.754 16.933 3.416 16.933H6.636L6.326 20.481C6.269 21.138 6.758 21.721 7.416 21.781L7.522 21.786C8.148 21.786 8.662 21.314 8.717 20.688L9.044 16.935H14.1L13.792 20.479C13.732 21.137 14.222 21.721 14.882 21.781L14.988 21.786C15.605 21.786 16.13 21.304 16.183 20.688L16.508 16.935H19.838C20.498 16.935 21.038 16.395 21.038 15.735C21.038 15.075 20.498 14.533 19.838 14.533H16.716L17.156 9.46898H20.586L20.585 9.46798ZM14.747 9.46798L14.307 14.531H9.253L9.693 9.46898H14.748L14.747 9.46798Z\" fill=\"#1da1f2\"/>\r\n</svg>:<svg width=\"26\" height=\"26\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M21 7.33698H17.07L17.442 3.06498C17.478 2.65298 17.172 2.28998 16.76 2.25298C16.343 2.22298 15.984 2.52298 15.948 2.93598L15.565 7.33598H9.245L9.615 3.06598C9.652 2.65298 9.345 2.28998 8.935 2.25298C8.515 2.22298 8.158 2.52298 8.122 2.93598L7.74 7.33598H3.782C3.368 7.33598 3.032 7.67298 3.032 8.08598C3.032 8.49898 3.368 8.83598 3.782 8.83598H7.61L7.06 15.163H3C2.586 15.163 2.25 15.499 2.25 15.913C2.25 16.327 2.586 16.663 3 16.663H6.93L6.558 20.935C6.522 21.347 6.828 21.71 7.24 21.747L7.306 21.75C7.691 21.75 8.018 21.455 8.052 21.064L8.435 16.664H14.755L14.385 20.934C14.349 21.347 14.655 21.71 15.067 21.747L15.133 21.75C15.518 21.75 15.845 21.455 15.879 21.064L16.261 16.664H20.218C20.631 16.664 20.968 16.327 20.968 15.914C20.968 15.501 20.631 15.164 20.218 15.164H16.39L16.94 8.83698H21C21.414 8.83698 21.75 8.50098 21.75 8.08698C21.75 7.67298 21.414 7.33698 21 7.33698ZM14.885 15.163H8.565L9.115 8.83698H15.435L14.885 15.163Z\" fill=\"#000\"/>\r\n</svg>\r\n}\r\n<h2>{text}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExploreOutlinedIcon;","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\BookMarksOutlinedIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\MoreIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButton.js",["276","277"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoreIcon from \"./Nav/icons/MoreIcon\";\r\n\r\nconst MoreButton = (props) => {\r\n  const [toggle, SetToggle] = useState(false);\r\n\r\n  const menuClass = `dropdown-menu${toggle ? \" show\" : \"\"}`;\r\n  const {\r\n    control,\r\n    href1,\r\n    href2,\r\n    href3,\r\n    href4,\r\n    href5,\r\n    href6,\r\n    href7,\r\n    href8,\r\n    icon1,\r\n    icon2,\r\n    icon3,\r\n    icon4,\r\n    icon5,\r\n    icon6,\r\n    icon7,\r\n    icon8,\r\n    text5,\r\n    text6,\r\n    text7,\r\n    text8,\r\n    text1,\r\n    text2,\r\n    text3,\r\n    text4,\r\n    icon,\r\n  } = props;\r\n\r\n  return (\r\n    <div\r\n      className=\"dropup\"\r\n     onClick={()=>SetToggle(!toggle)}>\r\n      <span\r\n        style={{ cursor: \"pointer\" }}\r\n        id=\"dropdownMenuButton\"\r\n        data-toggle=\"dropdown\"\r\n        aria-haspopup=\"true\"\r\n      >\r\n        {\" \"}\r\n        {icon}\r\n      </span>\r\n\r\n      <div className={menuClass} id=\"a\" aria-labelledby=\"dropdownMenuButton\">\r\n        {control === \"4\" && (\r\n          <>\r\n            {\" \"}\r\n            <Link className=\"dropdown-item\" to={href1}>\r\n              {icon1} <span>{text1}</span>\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to={href2}>\r\n              {icon2}\r\n              <span>{text2}</span>\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to={href3}>\r\n              {icon3}\r\n              <span>{text3}</span>\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to={href4}>\r\n              {icon4}\r\n              <span>{text4}</span>\r\n            </Link>\r\n          </>\r\n        )}\r\n\r\n        {control === \"8\" && (\r\n          <>\r\n            <Link className=\"dropdown-item\" to={href1}>\r\n              {icon1} <span>{text1}</span>\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to={href2}>\r\n              {icon2}\r\n              <span>{text2}</span>\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to={href3}>\r\n              {icon3}\r\n              <span>{text3}</span>\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to={href4}>\r\n              {icon4}\r\n              <span>{text4}</span>\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to={href5}>\r\n              {icon5} <span>{text5}</span>\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to={href6}>\r\n              {icon6}\r\n              <span>{text6}</span>\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to={href7}>\r\n              {icon7}\r\n              <span>{text7}</span>\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to={href8}>\r\n              {icon8}\r\n              <span>{text8}</span>\r\n            </Link>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoreButton;\r\n","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\ProfilePopover.js",["278","279","280"],"import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DefaultProfileImage from './DefaultProfileImage'\r\nimport CheckIcon from \"./MoreButtonIcons/CheckIcon\";\r\nimport MoreIcon from \"./Nav/icons/MoreIcon\";\r\n\r\nconst ProfilePopover = (props) => {\r\n  \r\n  const [toggle, SetToggle] = useState(false);\r\n  const menuClass = `dropdown-menu${toggle ? \" show\" : \"\"} `;\r\n  const OnClickToggle = () => {\r\n    SetToggle(!toggle);\r\n  }\r\n  const { image,logOutClick, username, displayName, icon, className ,icon1} = props;\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"dropup\">\r\n        <button\r\n          id=\"dropdownMenuButton\"\r\n          data-toggle=\"dropdown\"\r\n     \r\n          onClick={OnClickToggle}\r\n        >    <DefaultProfileImage\r\n        className=\" image-fit rounded-circle\"\r\n        height=\"48px\"\r\n        width=\"48px\"\r\n        image={image}\r\n        alt=\"\"\r\n      ></DefaultProfileImage>\r\n        \r\n          <span><strong>{displayName}</strong><br></br>{username}</span>\r\n          <i><MoreIcon></MoreIcon></i>\r\n          \r\n        </button>\r\n        <div className={menuClass} id=\"a\" aria-labelledby=\"dropdownMenuButton\">\r\n          <li >\r\n            <div> <DefaultProfileImage\r\n        className=\" image-fit rounded-circle\"\r\n        height=\"48px\"\r\n        width=\"48px\"\r\n        image={image}\r\n        alt=\"\"\r\n      ></DefaultProfileImage>\r\n     \r\n          <span><strong>{displayName}</strong> <br></br> <span>{username}</span>  </span>\r\n        <i><CheckIcon></CheckIcon></i>\r\n        </div>\r\n          \r\n          \r\n     \r\n          </li>\r\n          <hr></hr>\r\n          <div className=\"profilePopover-menu\">\r\n        \r\n            <p>Add an existing account</p>\r\n          \r\n          <hr></hr>\r\n          \r\n              <p onClick={logOutClick} style={{cursor:\"pointer\"}}>Log Out <strong>{username}</strong></p>\r\n          \r\n          </div>\r\n          \r\n       </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePopover;\r\n","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ProfileOutlinedIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\Setting.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\Topic.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\Moments.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\TwitterAds.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\Analytics.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\HelpCenter.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\DisplayIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\Keyboard.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButtonIcons\\CheckIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Tweet\\TweetView.js",["281","282"],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\UserListItem.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ImageShare.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\UploadImage.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\Gif.js",[],["283","284"],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\LikeIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ShareIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ReplyIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\ReTweet.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\ProfileCard.js",["285"],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav\\icons\\CloseIcon.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\HeaderCard\\Header.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\DefaultBackgroundImage\\DefaultBackgroundImage.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\Tweets.js",["286","287"],"import React, { useEffect, useState } from 'react';\r\nimport { Link} from 'react-router-dom';\r\n\r\nimport { oneTweet } from '../api/apiCall';\r\nimport DefaultProfileImage from '../components/DefaultProfileImage';\r\n\r\nimport Header from '../components/HeaderCard/Header'\r\n\r\nimport LikeIcon from '../components/Nav/icons/LikeIcon';\r\nimport ReplyIcon from '../components/Nav/icons/ReplyIcon';\r\nimport ReTweet from '../components/Nav/icons/ReTweet';\r\nimport ShareIcon from '../components/Nav/icons/ShareIcon';\r\nimport Stars from '../components/Nav/icons/Stars';\r\nimport ReplyFeed from '../components/Replies/ReplyFeed';\r\nimport ReplyView from '../components/Replies/ReplyView';\r\nconst Tweets = (props) => {\r\n\r\n    const [tweets,setTweets]=useState({})\r\n    const [loaded,setloaded]=useState(false);\r\n    const [modalVisible,setModalVisible]=useState(false)\r\n    const id=props.match.params.id\r\n\r\n   console.log(\"burdayız\"+tweets)\r\n    useEffect(()=>{\r\n        const loadOneTweet=async(page)=>{\r\n          const response= await oneTweet(id,page);\r\n       \r\n         setTweets(response.data)\r\n       \r\n        setloaded(true)\r\n        }\r\n        loadOneTweet();\r\n    },[id])\r\n\r\n    return (\r\n       <div>\r\n            <Header icon={<Stars/>}text=\"Tweets\"/>\r\n     \r\n           \r\n       {loaded && <>\r\n      <div className=\"card\">\r\n        <div className=\"d-flex\">\r\n          <DefaultProfileImage\r\n            width=\"48\"\r\n            height=\"48\"\r\n            className=\"rounded-circle\"\r\n            \r\n          />\r\n          <div className=\"flex-fill m-auto pl-2\">\r\n            <Link to={`/user/${tweets.user.username}`} className=\"text-dark\">\r\n              <h6>\r\n                <strong>{tweets.user.displayName}</strong>\r\n                <span\r\n                  style={{\r\n                    color: \"#5b7083\",\r\n                    fontSize: \"13px\",\r\n                    paddingLeft: \"3px\",\r\n                  }}\r\n                >\r\n                  @{tweets.user.username}{\" \"}\r\n                </span>\r\n              </h6>\r\n            </Link>\r\n            <div>\r\n             {tweets.content} \r\n             \r\n             </div>\r\n            {tweets.fileAttachment && (\r\n              <div className=\"files\">\r\n                {tweets.fileAttachment.fileType.startsWith(\"image\") && (\r\n                  <img\r\n                    className=\"file-attachments\"\r\n                    src={\"images/attachments/\" + tweets.fileAttachment.name}\r\n                    alt={tweets.content}\r\n                  ></img>\r\n                )}\r\n                {!tweets.fileAttachment.fileType.startsWith(\"image\") && (\r\n                  <strong>Unkown Property</strong>\r\n                )}\r\n              </div>\r\n            )}\r\n            <div className=\"beat\">\r\n              <div>\r\n              <span\r\n                        onClick={()=>{\r\n                         setModalVisible(true)\r\n                                                \r\n                        }}          >\r\n               \r\n               <ReplyIcon badge={tweets.replies_count}/>\r\n      \r\n              \r\n                 \r\n                \r\n                </span>\r\n                </div>\r\n              <div>\r\n                <ReTweet />\r\n              </div>\r\n\r\n              <div>\r\n                <LikeIcon />\r\n              </div>\r\n              <div>\r\n               <span><ShareIcon />\r\n              \r\n                </span>\r\n    \r\n              </div>\r\n\r\n            </div>   \r\n          </div>\r\n        </div>                 <ReplyFeed id={id} page={false}/>\r\n      </div> </>}\r\n    </div> \r\n     \r\n    );\r\n};\r\n\r\nexport default Tweets;","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Modal\\ReplyModal.js",["288"],"import React from \"react\";\r\nimport './Modal.css'\r\nimport CloseIcon from \"../Nav/icons/CloseIcon\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DefaultProfileImage from \"../DefaultProfileImage\";\r\n\r\nconst ReplyModal = (props) => {\r\n  \r\n  \r\n    const {\r\n  visible, contentProps,replyProps,text,onClicked,have,tUsername,tDisplayName,\r\n    attachmentProps,have2} = props;\r\n  let className = \"modal fade\";\r\n  if (visible) {\r\n    className += \"show d-block\";\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className={className} style={{ backgroundColor: \"#000000b0\" }}>\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n             <span style={{cursor:\"pointer\"}} onClick={onClicked}><CloseIcon className=\"icon\"/></span>\r\n             <span>{text}</span>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"replyProps\">\r\n                <div>\r\n                <div className=\"defaultImagePage\">\r\n          <DefaultProfileImage\r\n            width=\"48\"\r\n            height=\"48\"\r\n            className=\"rounded-circle\"\r\n          \r\n          />\r\n          <div className=\"flex-fill m-auto pl-2\">\r\n            <Link to={`user/${tUsername}`} className=\"text-dark\">\r\n              <h6>\r\n                <strong>{tDisplayName}</strong>\r\n                <span\r\n                  style={{\r\n                    color: \"#5b7083\",\r\n                    fontSize: \"13px\",\r\n                    paddingLeft: \"3px\",\r\n                  }}\r\n                >\r\n                 @{tUsername}{\" \"}\r\n                </span>\r\n              </h6>\r\n            </Link> {replyProps}<div>\r\n              <span>Replying to <span style={{color:\"#3da1f2\"}}>@{tUsername}</span></span>\r\n            </div> \r\n            </div>\r\n            </div>\r\n                </div>\r\n               \r\n              </div>\r\n            \r\n            {have &&   <div>\r\n          <img\r\n                    className=\"fileAttachmentReply\"\r\n                    src={\"images/attachments/\" + attachmentProps}\r\n                    alt=\"\"\r\n                  ></img>\r\n            </div> }\r\n           \r\n            \r\n              <div className=\"contentProps\">\r\n{              contentProps\r\n}              </div>\r\n             \r\n                 </div>\r\n          \r\n              \r\n             \r\n              <div>\r\n    \r\n              </div>\r\n             \r\n            </div>\r\n                     </div>\r\n        </div>\r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default ReplyModal;\r\n","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Modal\\EditModal.js",["289","290","291","292","293","294","295","296","297","298","299","300","301","302","303"],"import React, { useEffect, useState } from \"react\";\r\nimport ButtonWithProg from \"../ButtonWithProg\";\r\nimport CloseIcon from '../Nav/icons/CloseIcon'\r\nimport DefaultBackgroundImage from '../DefaultBackgroundImage/DefaultBackgroundImage'\r\nimport './Modal.css'\r\nimport DefaultProfileImage from \"../DefaultProfileImage\";\r\nimport InputComp from \"../InputComp\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst EditModal = (props) => {\r\n  \r\nconst[user,setUser]=useState({})\r\nconst[updatedDisplayName,setUpdatedDisplayName]=useState();\r\nconst[updatedDescription,setUpdatedDescription]=useState();\r\nconst[newImage,setNewImage]=useState();\r\nconst[newBackgroundImage,setNewBackgroundImage]=useState();\r\nconst[validationErrors,setValidationErrors]=useState({});\r\n\r\n\r\n\r\n\r\n  const {visible}=props;\r\n\r\n    let className = \"modal fade\";\r\n    if (visible) {\r\n      className += \"show d-block\";\r\n    }\r\n  return (\r\n    <div>\r\n      <div className={className} style={{ backgroundColor: \"#000000b0\" }}>\r\n      <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <div className=\"info\">\r\n                <span><CloseIcon className=\"icon\"/></span> \r\n                <span> Edit Profile</span>\r\n              </div>           \r\n              <div className=\"save\">\r\n              <ButtonWithProg text=\"Save\"></ButtonWithProg> \r\n             </div>                         \r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <div className=\"modalCard\">\r\n      <div>\r\n        <DefaultBackgroundImage /> <span><CloseIcon  className=\"iconGift\"/></span>\r\n      </div>\r\n      <div className=\"modalImage\">\r\n        <DefaultProfileImage\r\n          width=\"132\"\r\n          height=\"132\"\r\n          style={{ position: \"relative\" }}\r\n          className=\"rounded-circle\"\r\n        />{\" \"}\r\n   \r\n               \r\n              </div>\r\n\r\n            <InputComp/>\r\n            <InputComp/>\r\n            <InputComp/>\r\n            <InputComp/>\r\n              </div>\r\n              </div>\r\n            <div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditModal;\r\n","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Replies\\ReplyFeed.js",["304"],"import React, { useEffect, useState } from 'react';\r\nimport {getReplies} from '../../api/apiCall'\r\nimport ReplyView from './ReplyView';\r\n\r\nconst ReplyFeed = (props) => {\r\n   const [RepliesPage,setRepliesPage]=useState({\r\n       content:[],\r\n       number:0,\r\n       last:true\r\n   })\r\n   const{username,page}=props\r\n   const {id}=props;\r\n   const {content}=RepliesPage\r\n   \r\n    useEffect(()=>{\r\n        const getReply = async (page) => {\r\n            try {\r\n              const response = await getReplies(username,id,page);\r\n              setRepliesPage((previousRepliesPage) => ({\r\n                ...response.data,\r\n                content: [...previousRepliesPage.content, ...response.data.content],\r\n              }));\r\n            } catch (error) {}\r\n          };\r\n      \r\n  \r\n     getReply();\r\n  \r\n    },[username]);\r\n    return (\r\n        <div>\r\n            {content.map((reply) => {\r\n        return <ReplyView key={reply.id} reply={reply} page={page}></ReplyView>;\r\n      })} \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyFeed;","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Replies\\ReplyView.js",["305","306","307","308"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DefaultProfileImage from '../DefaultProfileImage';\r\nimport ReplyModal from '../Modal/ReplyModal';\r\nimport LikeIcon from '../Nav/icons/LikeIcon';\r\nimport ReplyIcon from '../Nav/icons/ReplyIcon';\r\nimport ReTweet from '../Nav/icons/ReTweet';\r\nimport ShareIcon from '../Nav/icons/ShareIcon';\r\nimport TweetSubmit from '../Tweet/TweetSubmit';\r\n\r\n\r\nconst ReplyView = (props) => {\r\n    const{reply,page}=props;\r\nconst{id,text,user,fileVM,tweet}=reply;\r\nconst[modalVisible,setModalVisible]=useState(false);\r\n    return (\r\n        \r\n        <div className=\"card\">\r\n          <div className=\"d-flex\">\r\n            <DefaultProfileImage\r\n              width=\"48\"\r\n              height=\"48\"\r\n              className=\"rounded-circle\"\r\n             \r\n            />\r\n            <div className=\"flex-fill m-auto pl-2\">\r\n              <Link to={page?`/user/${tweet.user.username}`:`/user/${reply.user.username}`} className=\"text-dark\">\r\n                <h6>\r\n                  <strong>{page?tweet.user.displayName:reply.user.displayName}</strong>\r\n                  <span\r\n                    style={{\r\n                      color: \"#5b7083\",\r\n                      fontSize: \"13px\",\r\n                      paddingLeft: \"3px\",\r\n                    }}\r\n                  >\r\n                    @{page?tweet.user.username:reply.user.username}{\" \"}\r\n                  </span>\r\n                </h6>\r\n              </Link>\r\n              <div>\r\n                <Link to={`/tweet/${tweet.id}`}  className=\"oneTweet\"> {page?tweet.content:reply.text} </Link>\r\n              \r\n              </div>\r\n              {(page?tweet.fileAttachment:reply.fileVM) && (\r\n                <div className=\"files\">\r\n                  {(page?tweet.fileAttachment.fileType:reply.fileVM.fileType).startsWith(\"image\") && (\r\n                    <img\r\n                      className=\"file-attachments\"\r\n                      src={\"images/attachments/\" + page?tweet.fileAttachment.name:reply.fileVM.name}\r\n                      alt={page?tweet.content:reply.text}\r\n                    ></img>\r\n                  )}\r\n                  {(page?!tweet.fileAttachment.fileType:!reply.fileVM.fileType).startsWith(\"image\") && (\r\n                    <strong>Unkown Property</strong>\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"beat\">\r\n                <div>\r\n                  <span\r\n                          onClick={()=>{\r\n                          setModalVisible(true)\r\n                                                  \r\n                          }}          >\r\n                \r\n                <ReplyIcon badge={tweet.replies_count}/>\r\n                    {modalVisible && (\r\n                  \r\n                  <div>\r\n                    {tweet.fileAttachment?<ReplyModal\r\n                        have={true}\r\n                        \r\n                        tUsername={tweet.user.username}\r\n                        tDisplayName={tweet.user.displayName}\r\n                        replyProps={tweet.content}\r\n                        attachmentProps={tweet.fileAttachment.name}\r\n                        visible={true}\r\n                        contentProps={<TweetSubmit id={tweet.id} tR={false}/>}\r\n                         \r\n                      ></ReplyModal>:<ReplyModal replyProps={tweet.content}   tUsername={tweet.user.username}\r\n                      tDisplayName={tweet.user.displayName}   have={false} visible={true}/>}\r\n                  </div>\r\n                \r\n                  \r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <ReTweet />\r\n                </div>\r\n\r\n                <div>\r\n                  <LikeIcon />\r\n                </div>\r\n                <div>\r\n                <span><ShareIcon />\r\n        \r\n                  </span>\r\n                \r\n                </div>\r\n              \r\n              </div> \r\n            \r\n            </div>\r\n          </div>\r\n        </div>\r\n   \r\n    );\r\n};\r\n\r\nexport default ReplyView;","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Replies\\ReplySubmit.js",["309"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { postReply, postReplyAttachment, postTweetAttachment } from '../../api/apiCall';\r\nimport { useApiProgress } from '../../Shared/ApiProgress';\r\n\r\nimport ButtonWithProg from '../ButtonWithProg';\r\nimport DefaultProfileImage from '../DefaultProfileImage';\r\nimport InputComp from '../InputComp';\r\nimport ImageShare from '../Nav/icons/ImageShare';\r\nimport ListOutlinedIcon from '../Nav/icons/ListOutlinedIcon';\r\nimport ProfileOutlinedIcon from '../Nav/icons/ProfileOutlinedIcon';\r\nimport UploadImage from '../UploadImage';\r\n\r\nconst ReplySubmit = (props) => {\r\n    const [replyMessage, setReplyMessage] = useState(\"\");\r\n    const { image } = useSelector((store) => ({\r\n      image: store.image,\r\n    }));\r\n\r\n    const{id}=props;\r\n    const [focused, setFocused] = useState(false);\r\n    const [errors, SetErrors] = useState({});\r\n    const [replyImage, SetReplyImage] = useState();\r\n  \r\n    const [AttachmentRepliesId, setAttachmentRepliesId] = useState();\r\n   \r\n    useEffect(() => {\r\n      if (!focused) {\r\n        setReplyMessage(\"\");\r\n        SetErrors({});\r\n        SetReplyImage();\r\n        setAttachmentRepliesId();\r\n      \r\n      }\r\n    }, [focused]);\r\n    useEffect(() => {\r\n      SetErrors({});\r\n    }, [replyMessage]);\r\n   \r\n    const onClickReply = async () => {\r\n      const body = {\r\n        text: replyMessage,\r\n        AttachmentRepliesId: AttachmentRepliesId,\r\n      };\r\n      try {\r\n        await postReply(id,body);\r\n        setFocused(false);\r\n      } catch (e) {\r\n        if (e.response.data.validationErrors) {\r\n          SetErrors(e.response.data.validationErrors);\r\n        }\r\n      }\r\n    };\r\n  \r\n    const uploadFile = async (file) => {\r\n      const attachment = new FormData();\r\n      attachment.append(\"files\", file);\r\n      const response = await postTweetAttachment(attachment);\r\n      setAttachmentRepliesId(response.data.id);\r\n    };\r\n\r\n    const onChangeReplyFile=(event)=>{\r\n      if(event.target.files.length<1){\r\n        return\r\n      }\r\n      const file=event.target.files[0]\r\n      const fileReader=new FileReader();\r\n      fileReader.onload=()=>{\r\n        SetReplyImage(fileReader.result);\r\n        uploadFile(file)\r\n      }\r\n  fileReader.readAsDataURL(file);\r\n    }\r\n   \r\n    const pendingUploadFiles = useApiProgress(\"post\",\"/api/1.0/tweet-attachments\",true);\r\n    return (\r\n      <div className=\"tweetSubmit\">\r\n        <form>\r\n          <div className=\"tweetSubmitArea\">\r\n            <DefaultProfileImage\r\n              width=\"48\"\r\n              height=\"48\"\r\n              className=\"rounded-circle\"\r\n              image={image}\r\n            />\r\n  \r\n            <textarea\r\n              onChange={(e) =>setReplyMessage(e.target.value)}\r\n              value={replyMessage}\r\n              onFocus={() => setFocused(true)}\r\n              placeholder={\"Your Reply Tweet\"}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"invalid-feedback\">{errors.content}</div>\r\n          <div className=\"share\">\r\n            <div className=\"share1\">\r\n              {!replyImage  && (\r\n                <InputComp\r\n                  icon={<ImageShare />}\r\n                  active\r\n                  id=\"upload-photo\"\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                 onChange={onChangeReplyFile}\r\n                ></InputComp>\r\n              )}\r\n              \r\n              {replyImage && (\r\n                <UploadImage\r\n                  image={replyImage}\r\n                  uploading={pendingUploadFiles}\r\n                  icon1={<ProfileOutlinedIcon />}\r\n                  icon={<ListOutlinedIcon />}\r\n                ></UploadImage>\r\n              )}\r\n           \r\n            </div>\r\n      <ButtonWithProg\r\n              onClick={onClickReply}\r\n              type=\"submit\"\r\n              text={\"Reply\"}\r\n              className=\"ttButton\"\r\n              disabled={replyMessage.length===0 && !replyImage}\r\n            ></ButtonWithProg>{\" \"}\r\n              \r\n            \r\n            \r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ReplySubmit;",{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":4,"column":3,"nodeType":"316","messageId":"317","endLine":4,"endColumn":11},{"ruleId":"314","severity":1,"message":"318","line":6,"column":3,"nodeType":"316","messageId":"317","endLine":6,"endColumn":13},{"ruleId":"314","severity":1,"message":"319","line":21,"column":10,"nodeType":"316","messageId":"317","endLine":21,"endColumn":18},{"ruleId":"314","severity":1,"message":"320","line":39,"column":13,"nodeType":"316","messageId":"317","endLine":39,"endColumn":21},{"ruleId":"314","severity":1,"message":"321","line":5,"column":8,"nodeType":"316","messageId":"317","endLine":5,"endColumn":27},{"ruleId":"314","severity":1,"message":"322","line":9,"column":8,"nodeType":"316","messageId":"317","endLine":9,"endColumn":17},{"ruleId":"314","severity":1,"message":"323","line":16,"column":10,"nodeType":"316","messageId":"317","endLine":16,"endColumn":24},{"ruleId":"314","severity":1,"message":"324","line":1,"column":17,"nodeType":"316","messageId":"317","endLine":1,"endColumn":26},{"ruleId":"314","severity":1,"message":"323","line":12,"column":9,"nodeType":"316","messageId":"317","endLine":12,"endColumn":23},{"ruleId":"310","replacedBy":"325"},{"ruleId":"312","replacedBy":"326"},{"ruleId":"314","severity":1,"message":"327","line":2,"column":11,"nodeType":"316","messageId":"317","endLine":2,"endColumn":20},{"ruleId":"314","severity":1,"message":"328","line":1,"column":17,"nodeType":"316","messageId":"317","endLine":1,"endColumn":25},{"ruleId":"314","severity":1,"message":"328","line":1,"column":17,"nodeType":"316","messageId":"317","endLine":1,"endColumn":25},{"ruleId":"314","severity":1,"message":"324","line":1,"column":17,"nodeType":"316","messageId":"317","endLine":1,"endColumn":26},{"ruleId":"314","severity":1,"message":"329","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":16},{"ruleId":"314","severity":1,"message":"330","line":2,"column":10,"nodeType":"316","messageId":"317","endLine":2,"endColumn":21},{"ruleId":"314","severity":1,"message":"331","line":14,"column":53,"nodeType":"316","messageId":"317","endLine":14,"endColumn":57},{"ruleId":"314","severity":1,"message":"332","line":14,"column":70,"nodeType":"316","messageId":"317","endLine":14,"endColumn":75},{"ruleId":"314","severity":1,"message":"324","line":1,"column":17,"nodeType":"316","messageId":"317","endLine":1,"endColumn":26},{"ruleId":"314","severity":1,"message":"333","line":10,"column":8,"nodeType":"316","messageId":"317","endLine":10,"endColumn":19},{"ruleId":"310","replacedBy":"334"},{"ruleId":"312","replacedBy":"335"},{"ruleId":"314","severity":1,"message":"324","line":1,"column":17,"nodeType":"316","messageId":"317","endLine":1,"endColumn":26},{"ruleId":"314","severity":1,"message":"336","line":15,"column":8,"nodeType":"316","messageId":"317","endLine":15,"endColumn":17},{"ruleId":"314","severity":1,"message":"337","line":20,"column":12,"nodeType":"316","messageId":"317","endLine":20,"endColumn":24},{"ruleId":"314","severity":1,"message":"338","line":12,"column":21,"nodeType":"316","messageId":"317","endLine":12,"endColumn":26},{"ruleId":"314","severity":1,"message":"324","line":1,"column":17,"nodeType":"316","messageId":"317","endLine":1,"endColumn":26},{"ruleId":"314","severity":1,"message":"330","line":8,"column":10,"nodeType":"316","messageId":"317","endLine":8,"endColumn":21},{"ruleId":"314","severity":1,"message":"339","line":9,"column":10,"nodeType":"316","messageId":"317","endLine":9,"endColumn":19},{"ruleId":"314","severity":1,"message":"340","line":12,"column":7,"nodeType":"316","messageId":"317","endLine":12,"endColumn":11},{"ruleId":"314","severity":1,"message":"341","line":12,"column":12,"nodeType":"316","messageId":"317","endLine":12,"endColumn":19},{"ruleId":"314","severity":1,"message":"342","line":13,"column":7,"nodeType":"316","messageId":"317","endLine":13,"endColumn":25},{"ruleId":"314","severity":1,"message":"343","line":13,"column":26,"nodeType":"316","messageId":"317","endLine":13,"endColumn":47},{"ruleId":"314","severity":1,"message":"344","line":14,"column":7,"nodeType":"316","messageId":"317","endLine":14,"endColumn":25},{"ruleId":"314","severity":1,"message":"345","line":14,"column":26,"nodeType":"316","messageId":"317","endLine":14,"endColumn":47},{"ruleId":"314","severity":1,"message":"346","line":15,"column":7,"nodeType":"316","messageId":"317","endLine":15,"endColumn":15},{"ruleId":"314","severity":1,"message":"347","line":15,"column":16,"nodeType":"316","messageId":"317","endLine":15,"endColumn":27},{"ruleId":"314","severity":1,"message":"348","line":16,"column":7,"nodeType":"316","messageId":"317","endLine":16,"endColumn":25},{"ruleId":"314","severity":1,"message":"349","line":16,"column":26,"nodeType":"316","messageId":"317","endLine":16,"endColumn":47},{"ruleId":"314","severity":1,"message":"350","line":17,"column":7,"nodeType":"316","messageId":"317","endLine":17,"endColumn":23},{"ruleId":"314","severity":1,"message":"351","line":17,"column":24,"nodeType":"316","messageId":"317","endLine":17,"endColumn":43},{"ruleId":"352","severity":1,"message":"353","line":29,"column":7,"nodeType":"354","endLine":29,"endColumn":17,"suggestions":"355"},{"ruleId":"314","severity":1,"message":"356","line":14,"column":7,"nodeType":"316","messageId":"317","endLine":14,"endColumn":9},{"ruleId":"314","severity":1,"message":"357","line":14,"column":10,"nodeType":"316","messageId":"317","endLine":14,"endColumn":14},{"ruleId":"314","severity":1,"message":"340","line":14,"column":15,"nodeType":"316","messageId":"317","endLine":14,"endColumn":19},{"ruleId":"314","severity":1,"message":"358","line":14,"column":20,"nodeType":"316","messageId":"317","endLine":14,"endColumn":26},{"ruleId":"314","severity":1,"message":"359","line":3,"column":21,"nodeType":"316","messageId":"317","endLine":3,"endColumn":40},"no-native-reassign",["360"],"no-negated-in-lhs",["361"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'HashRouter' is defined but never used.","'username' is assigned a value but never used.","'response' is assigned a value but never used.","'DefaultProfileImage' is defined but never used.","'TweetFeed' is defined but never used.","'pendingApiCall' is assigned a value but never used.","'useEffect' is defined but never used.",["360"],["361"],"'postReply' is defined but never used.","'useState' is defined but never used.","'MoreIcon' is defined but never used.","'useSelector' is defined but never used.","'icon' is assigned a value but never used.","'icon1' is assigned a value but never used.","'TweetSubmit' is defined but never used.",["360"],["361"],"'ReplyView' is defined but never used.","'modalVisible' is assigned a value but never used.","'have2' is assigned a value but never used.","'useParams' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'updatedDisplayName' is assigned a value but never used.","'setUpdatedDisplayName' is assigned a value but never used.","'updatedDescription' is assigned a value but never used.","'setUpdatedDescription' is assigned a value but never used.","'newImage' is assigned a value but never used.","'setNewImage' is assigned a value but never used.","'newBackgroundImage' is assigned a value but never used.","'setNewBackgroundImage' is assigned a value but never used.","'validationErrors' is assigned a value but never used.","'setValidationErrors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["362"],"'id' is assigned a value but never used.","'text' is assigned a value but never used.","'fileVM' is assigned a value but never used.","'postReplyAttachment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"363","fix":"364"},"Update the dependencies array to be: [id, username]",{"range":"365","text":"366"},[811,821],"[id, username]"]