[{"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\index.js":"1","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\App.js":"2","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\reportWebVitals.js":"3","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav.js":"4","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\LoginPage.js":"5","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\HomePage.js":"6","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\ButtonWithProg.js":"7","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\InputComp.js":"8","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButton.js":"9","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\UserSingUpPage.js":"10","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Modal.js":"11","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\api\\apiCall.js":"12","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\UserPage.js":"13","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\Shared\\ApiProgress.js":"14","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\configureStore.js":"15","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\authReducer.js":"16","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\authAction.js":"17","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\Shared\\AuthenticationContext.js":"18","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\Constants.js":"19","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Popover.js":"20","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\SearchOnTwitter.js":"21"},{"size":776,"mtime":1611152029514,"results":"22","hashOfConfig":"23"},{"size":1459,"mtime":1611181013947,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":16119,"mtime":1611179469191,"results":"26","hashOfConfig":"23"},{"size":2130,"mtime":1611073859436,"results":"27","hashOfConfig":"23"},{"size":771,"mtime":1611181525131,"results":"28","hashOfConfig":"23"},{"size":454,"mtime":1611151581661,"results":"29","hashOfConfig":"23"},{"size":665,"mtime":1610804415695,"results":"30","hashOfConfig":"23"},{"size":6013,"mtime":1611162821106,"results":"31","hashOfConfig":"23"},{"size":3673,"mtime":1611062426909,"results":"32","hashOfConfig":"23"},{"size":1374,"mtime":1610747142050,"results":"33","hashOfConfig":"23"},{"size":593,"mtime":1611073334378,"results":"34","hashOfConfig":"23"},{"size":163,"mtime":1611007317373,"results":"35","hashOfConfig":"23"},{"size":1417,"mtime":1611061046940,"results":"36","hashOfConfig":"23"},{"size":1237,"mtime":1611101859472,"results":"37","hashOfConfig":"23"},{"size":656,"mtime":1611102085308,"results":"38","hashOfConfig":"23"},{"size":973,"mtime":1611102082172,"results":"39","hashOfConfig":"23"},{"size":1010,"mtime":1611075447853,"results":"40","hashOfConfig":"23"},{"size":134,"mtime":1611101978703,"results":"41","hashOfConfig":"23"},{"size":2632,"mtime":1611179645478,"results":"42","hashOfConfig":"23"},{"size":185,"mtime":1611175143531,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14c11j7",{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\index.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\App.js",["89","90","91","92","93","94"],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\reportWebVitals.js",[],["95","96"],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Nav.js",["97"],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\LoginPage.js",["98","99"],"\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../api/apiCall\";\r\nimport twitter from \"../assets/twitter.png\";\r\nimport ButtonWithProg from \"../components/ButtonWithProg\";\r\nimport InputComp from \"../components/InputComp\";\r\nimport { loginHandler } from \"../redux/authAction\";\r\nimport { useApiProgress } from \"../Shared/ApiProgress\";\r\nconst LoginPage = (props) => {\r\n  const[username,setUsername]=useState();\r\n  const[password,SetPassword]=useState();\r\n  const[error,SetError]=useState(undefined);\r\n  const pendingApiCall=useApiProgress('post','/api/1.0/auth',true)\r\n  const dispatch=useDispatch();\r\n \r\n  useEffect(()=>{\r\n\r\n    SetError(undefined)\r\n  },[username,password])\r\n\r\n  const  onClickLogin = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    const creds = {\r\n      username,\r\n      password,\r\n    };\r\n    const{history}=props\r\n    const { push } = history;\r\n    SetError(undefined);\r\n    try {\r\n    await dispatch(loginHandler(creds))\r\n      push(\"/\");\r\n    } catch (apiError) {\r\n      SetError(apiError.response.data.message)\r\n      \r\n      };\r\n    }\r\n \r\n  const btnEnabled=username&&password;\r\n  return (\r\n    <div className=\"container\">\r\n  <div className=\"row\">\r\n    <div className=\"col-5\">\r\n    <img src={twitter} alt=\"\" width=\"300px \"></img>\r\n    </div>\r\n    <div></div>\r\n    <div className=\"col\">\r\n    <InputComp\r\n            \r\n            label=\"Email\"\r\n            type=\"email\"\r\n            onChange={event=>setUsername(event.target.value)}\r\n           error={error}\r\n          ></InputComp>\r\n    </div>\r\n    <div className=\"col\">\r\n    <InputComp label=\"Password\"  type=\"password\"  onChange={(event)=>SetPassword(event.target.value)}></InputComp>\r\n    \r\n    </div>\r\n    <div className=\"col pt-3\">\r\n      <ButtonWithProg  \r\n              text=\"Login\" pendingApiCall={pendingApiCall}  className=\"btn-md  rounded-pill outlined shadow-none  \"\r\n              onClick={onClickLogin} disabled={pendingApiCall||!btnEnabled}></ButtonWithProg>\r\n \r\n    </div>\r\n  </div>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\HomePage.js",["100","101"],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\ButtonWithProg.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\InputComp.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\MoreButton.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\UserSingUpPage.js",["102","103","104"],"import React, { useState } from \"react\";\r\nimport twitter from \"../assets/twitter.png\";\r\nimport Modal from \"../components/Modal\";\r\nimport InputComp from \"../components/InputComp\";\r\nimport {  MDBIcon } from 'mdbreact';\r\nimport ButtonWithProg from \"../components/ButtonWithProg\";\r\nimport { signup,  } from \"../api/apiCall\";\r\nimport { useApiProgress } from \"../Shared/ApiProgress\";\r\nconst UserSingUpPage = (props) => {\r\n  const [form, SetForm] = useState({\r\n    username: null,\r\n    password: null,\r\n    email: null,\r\n    passwordRepeat: null,\r\n  });\r\n  const [errors, SetErrors] = useState({});\r\n  const onChangeEvent = (event) => {\r\n    const { name, value } = event.target;\r\n    const errorsCopy = { ...errors };\r\n    errorsCopy[name] = undefined;\r\n    SetErrors(errorsCopy);\r\n    const formCopy = { ...form };\r\n    formCopy[name] = value;\r\n    SetForm((previousForm) => ({ ...previousForm, [name]: value }));\r\n  };\r\n  const pendingApiCall=useApiProgress('post','/api/1.0/addUser',true);\r\n  const onClickSignUp = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { username, password, email } = form;\r\n    const body = {\r\n      username,\r\n      email,\r\n      password,\r\n    };\r\n   \r\n\r\n    try {\r\n      const response = await signup(body);\r\n    } catch (e) {\r\n      console.log(e.response.data);\r\n      if (e.response.data.validationErrors)\r\n        SetErrors(e.response.data.validationErrors);\r\n    }\r\n  \r\n  };\r\n  const {\r\n    username: usernameError,\r\n    password: passwordError,\r\n    email: emailError,\r\n  } = errors;\r\n  let passwordRepeatError;\r\n  if (form.password !== form.passwordRepeat) {\r\n    passwordRepeatError = \"Password mismatch\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5  pt-5 \" style={{ width: \"700px\" }}>\r\n      <div\r\n        className=\"card text-center shadow-lg \"\r\n        style={{ borderRadius: \"20px\", width: \"600px\", height: \"597px\" }}\r\n      >\r\n        <div className=\"card-text\">\r\n          <MDBIcon\r\n            fab\r\n            className=\"pt-3\"\r\n            icon=\"twitter\"\r\n            style={{ color: \"#1da1f2\" }}\r\n            size=\"lg\"\r\n          ></MDBIcon>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <b\r\n            className=\"text-left\"\r\n            style={{ fontFamily: \"inherit\", fontSize: 23 }}\r\n          >\r\n            <p>Create an account</p>\r\n          </b>\r\n\r\n          <InputComp\r\n            name=\"username\"\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            onChange={onChangeEvent}\r\n            error={usernameError}\r\n          ></InputComp>\r\n          <InputComp\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            onChange={onChangeEvent}\r\n            error={emailError}\r\n          ></InputComp>\r\n          <InputComp\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            onChange={onChangeEvent}\r\n            error={passwordError}\r\n          ></InputComp>\r\n          <InputComp\r\n            name=\"passwordRepeat\"\r\n            label=\"PasswordRepeat\"\r\n            type=\"password\"\r\n            onChange={onChangeEvent}\r\n            error={passwordRepeatError}\r\n          ></InputComp>\r\n\r\n          \r\n            \r\n          \r\n          <div className=\"p-5\">\r\n            {\" \"}\r\n            <ButtonWithProg\r\n              disabled={(pendingApiCall,passwordRepeatError!== undefined )}\r\n              className=\"btn  rounded-pill pl-3 \"\r\n             pendingApiCall={pendingApiCall}\r\n              text=\"SignUp\"\r\n              onClick={onClickSignUp}\r\n            ></ButtonWithProg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSingUpPage;\r\n","C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Modal.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\api\\apiCall.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\pages\\UserPage.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\Shared\\ApiProgress.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\configureStore.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\authReducer.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\authAction.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\Shared\\AuthenticationContext.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\redux\\Constants.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\Popover.js",[],"C:\\Users\\Mithatcan\\Documents\\GitHub\\TwitterClone\\src\\components\\SearchOnTwitter.js",[],{"ruleId":"105","severity":1,"message":"106","line":4,"column":3,"nodeType":"107","messageId":"108","endLine":4,"endColumn":11},{"ruleId":"105","severity":1,"message":"109","line":6,"column":3,"nodeType":"107","messageId":"108","endLine":6,"endColumn":13},{"ruleId":"105","severity":1,"message":"110","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":22},{"ruleId":"105","severity":1,"message":"111","line":12,"column":8,"nodeType":"107","messageId":"108","endLine":12,"endColumn":16},{"ruleId":"105","severity":1,"message":"112","line":15,"column":8,"nodeType":"107","messageId":"108","endLine":15,"endColumn":18},{"ruleId":"105","severity":1,"message":"113","line":17,"column":8,"nodeType":"107","messageId":"108","endLine":17,"endColumn":15},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"105","severity":1,"message":"111","line":17,"column":8,"nodeType":"107","messageId":"108","endLine":17,"endColumn":16},{"ruleId":"105","severity":1,"message":"118","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":13},{"ruleId":"105","severity":1,"message":"119","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":15},{"ruleId":"105","severity":1,"message":"120","line":7,"column":10,"nodeType":"107","messageId":"108","endLine":7,"endColumn":25},{"ruleId":"121","severity":1,"message":"122","line":17,"column":1,"nodeType":"123","endLine":17,"endColumn":77},{"ruleId":"105","severity":1,"message":"124","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":15},{"ruleId":"105","severity":1,"message":"125","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":13},{"ruleId":"105","severity":1,"message":"126","line":39,"column":13,"nodeType":"107","messageId":"108","endLine":39,"endColumn":21},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'HashRouter' is defined but never used.","'UserSignUpPage' is defined but never used.","'UserPage' is defined but never used.","'MoreButton' is defined but never used.","'Popover' is defined but never used.","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'axios' is defined but never used.","'login' is defined but never used.","'onLogoutSuccess' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'twitter' is defined but never used.","'Modal' is defined but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]